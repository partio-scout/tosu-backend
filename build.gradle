buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '1.11'
    id 'java'
}
lombok {
    version = "1.16.20" 
    sha256 = ""
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'


jar {
    baseName = 'tosu-backend'
    version =  '0.1.0'
    manifest {
        attributes 'Main-Class': 'partio.Application'
    }
}

run {
    standardInput = System.in
}
bootRun {
    //gradle -Dspring.profiles.active=production bootRun
    //with this command you can test how program works with production profile
    //assuming you have a mock postgresql running with this command
    //createdb -h localhost -p 5432 -U postgres tosudb password tosudb;
    systemProperties System.properties
}

test {
    testLogging.showStandardStreams = false
    systemProperties System.getProperties()
}
mainClassName='partio.Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('com.h2database:h2')
    runtime('org.postgresql:postgresql')
    compileOnly('org.projectlombok:lombok')
    //json
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    // https://mvnrepository.com/artifact/com.google.api-client/google-api-client
    compile group: 'com.google.api-client', name: 'google-api-client', version: '1.23.0'


}

